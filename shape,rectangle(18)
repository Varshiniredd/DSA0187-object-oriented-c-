#include <iostream>

class Shape {
public:
   
    virtual double getArea() const = 0;
};

class Rectangle : public Shape {
private:
    double length;
    double width;

public:
   
    Rectangle(double l, double w) : length(l), width(w) {}

    double getArea() const override {
        return length * width;
    }
};

class Circle : public Shape {
private:
    double radius;

public:
   
    Circle(double r) : radius(r) {}

    double getArea() const override {
        return 3.14159 * radius * radius; 
    }
};

int main() {
   
    Rectangle rectangle(5.0, 3.0);
    std::cout << "Area of Rectangle: " << rectangle.getArea() << std::endl;

    Circle circle(4.0);
    std::cout << "Area of Circle: " << circle.getArea() << std::endl;

    return 0;
}
